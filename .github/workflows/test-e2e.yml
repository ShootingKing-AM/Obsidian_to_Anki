name: Test e2e

env:
  PLUGIN_NAME: obsidian-to-anki-plugin

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      # - run: npm test
      
      - name: Run Tests
        run: | 
          # npm run copy
          npm run test

      - name: Package
        if: always()
        run: |
          mkdir ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json styles.css README.md ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            logs/test-reports/**/*.xml
      
      - uses: iterative/setup-cml@v1
        if: always()
      
      - name: Publish Screenshots - Find Comment
        if: always()
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '# ðŸ“· Screenshots of tests:'
          direction: last
          comment-author: 'github-actions[bot]'
      
      - name: Publish Screenshots - Make comment
        if: always()
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}
        run: |
          echo "# ðŸ“· Screenshots of tests:" >> comment.md
          echo "" >> comment.md  # just for the newline

          echo "<details><summary>Obsidian Pre-Test</summary>" >> comment.md
          echo '<p float="left">' >> comment.md
          cml-publish "logs/obs_post_test.png" | sed -E 's/.+/<img width="75%" src="\0"\/>/' >> comment.md
          # echo '![](./logs/obs_post_test.png)' >> comment.md
          echo '</p></details>' >> comment.md

          echo -n '<details><summary>Obsidian Pre-Test</summary>' >> comment.md
          echo '<p float="left">' >> comment.md
          cml-publish "logs/obs_pre_test.png" | sed -E 's/.+/<img width="75%" src="\0"\/>/' >> comment.md
          # echo '![](./logs/obs_pre_test.png)' >> comment.md
          echo '</p></details>' >> comment.md

          for ss in tests/test_config/Screenshot*; do 
            echo -n '<details><summary>SS</summary>' >> comment.md
            echo '<p float="left">' >> comment.md
            cml-publish "$ss" | sed -E 's/.+/<img width="75%" src="\0"\/>/' >> comment.md
            # echo "![](./$ss)" >> comment.md
            echo '</p></details>' >> comment.md
          done

          if [ "$EVENT" == 'pull_request' ]
          then
            echo "::set-output name=sha::$(echo ${{github.event.pull_request.head.sha}})" >> $sha
          elif [ "$EVENT" == 'workflow_run' ]
          then
            echo "::set-output name=sha::$(echo ${{github.event.workflow_run.head_sha}})" >> $sha
          else
            echo "::set-output name=sha::$(echo $GITHUB_SHA)" >> $sha
          fi
          echo -n "[^-]: For commit $sha" >> comment.md

          # cml comment create --publish comment.md
      
      - name: Publish Screehnshots - Update Comment
        # if: ${{ steps.fc.outputs.comment-id }} == ''
        if: always()
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body-file: comment.md
          edit-mode: replace
          issue-number: ${{ github.event.number }}

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLUGIN_NAME }}
          path: |
            ${{ env.PLUGIN_NAME }}.zip
            logs/*
            tests/test_config/logs/*
            tests/test_config/*.png
            # tests/test_config/.config/obsidian
            tests/test_config/.xsession-errors
